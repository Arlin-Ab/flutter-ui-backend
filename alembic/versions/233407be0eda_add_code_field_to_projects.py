"""add code field to projects

Revision ID: 233407be0eda
Revises: b5ba439fe857
Create Date: 2025-04-22 12:39:36.178181

"""
from typing import Sequence, Union
import random
import string
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '233407be0eda'
down_revision: Union[str, None] = 'b5ba439fe857'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def generate_random_code():
    return f"PROJ-{''.join(random.choices(string.ascii_uppercase + string.digits, k=6))}"

def upgrade():
    # Paso 1: agrega la columna como nullable
    op.add_column('projects', sa.Column('code', sa.String(), nullable=True))

    # Paso 2: genera códigos únicos para los proyectos existentes
    conn = op.get_bind()
    result = conn.execute(sa.text("SELECT id FROM projects WHERE code IS NULL"))
    for row in result:
        code = generate_random_code()
        conn.execute(sa.text("UPDATE projects SET code = :code WHERE id = :id"), {"code": code, "id": row.id})

    # Paso 3: hace la columna obligatoria después de actualizar
    op.alter_column('projects', 'code', nullable=False)

    # Paso 4: agrega el índice único
    op.create_unique_constraint(None, 'projects', ['code'])


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'projects', type_='unique')
    op.drop_column('projects', 'code')
    # ### end Alembic commands ###
